(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{180:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"es6基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6基础","aria-hidden":"true"}},[a._v("#")]),a._v(" ES6基础")]),a._v(" "),e("h2",{attrs:{id:"类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类","aria-hidden":"true"}},[a._v("#")]),a._v(" 类")]),a._v(" "),e("h3",{attrs:{id:"_1-什么是类："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是类：","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.什么是类：")]),a._v(" "),e("p",[a._v("类实际上是个“特殊的函数”，就像你能够定义的函数表达式和函数声明一样，类语法有两个组成部分：类表达式和类声明。")]),a._v(" "),e("h3",{attrs:{id:"_2-类声明："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-类声明：","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.类声明：")]),a._v(" "),e("p",[a._v("定义一个类的一种方法是使用一个类声明。要声明一个类，你可以使用带有class关键字的类名")]),a._v(" "),e("h3",{attrs:{id:"_3-类声明和函数声明的区别："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-类声明和函数声明的区别：","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.类声明和函数声明的区别：")]),a._v(" "),e("p",[a._v("1.函数声明会提升，类声明不会。")]),a._v(" "),e("h3",{attrs:{id:"_4-类表达式："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-类表达式：","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.类表达式：")]),a._v(" "),e("p",[a._v("一个类表达式是定义一个类的另一种方式。类表达式可以是被命名的或匿名的。赋予一个命名类表达式的名称是类的主体的本地名称")])])}],!1,null,null,null);s.options.__file="es6.md";t.default=s.exports}}]);